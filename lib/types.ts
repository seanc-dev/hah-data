// FORM OPTIONS TYPES
// Generated by https://quicktype.io

export interface FormDetail {
	kapiti: Forms;
	wellington: Forms;
}

export interface Forms {
	clientDetails: Details;
	jobDetails: Details;
}

export interface Details {
	restfulName: string;
	structure: Structure[];
	fields: { [key: `${"cd" | "jd"}_${string}`]: Field }; // string is Field.fieldName value
}

export interface Field {
	label: string;
	fieldName: FieldName;
	fieldType: FieldType;
	values?: (number | string)[];
	readOnly?: boolean;
	isRequired?: boolean;
	submitExclude?: boolean;
	additionalClasses?: AdditionalClass[] | string;
	validationDetail?: string;
}

export type FieldName = string;

export type FieldType =
	| "hidden"
	| "select"
	| "datalist"
	| "Text"
	| "textarea"
	| "tel"
	| "date"
	| "number";

export type AdditionalClass = "account-name" | "d-none" | "staff-hours";

export interface Structure {
	sectionTitle: string;
	fields: Array<string[]>;
}

// NEW FORMS DATA STRUCTURE

export interface NewFormsObject {
	client: NewFormDetail<ClientFormFieldName>;
	job: NewFormDetail<JobFormFieldName>;
	staff: StaffFormDetail;
}

export type ClientFormFieldName = string;

export type JobFormFieldName = string;

export interface NewFormDetail<N> {
	restfulName: "clients" | "jobs";
	detail: FormStructureDetail<N>[];
}

export interface FormStructureDetail<N> {
	sectionTitle: string;
	rowsArray: NewField<N>[][];
}

export interface NewField<N> {
	label: string;
	name: N;
	type: FieldType;
	properties?: FieldProperties;
	classes?: FormFieldClass;
	validation?: FieldValidationDetail;
}

export interface FieldProperties {
	readOnly?: boolean;
	isRequired?: boolean;
	excludeFromSubmit?: boolean; // called 'submitExclude' in Field object
}

export type FormFieldClass = AdditionalClass;

export interface FieldValidationDetail {
	isValidationRequired: boolean;
	validationDetail?: string;
	validation: (val: any) => boolean;
}

export interface StaffFormDetail {}
